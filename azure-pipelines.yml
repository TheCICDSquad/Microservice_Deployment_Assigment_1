trigger:
- main  # or your main branch name

variables:
  # Name of the Docker image to build
  imageName: 'your-python-app'
  # Docker registry service connection (set this in Azure DevOps)
  dockerRegistryServiceConnection: 'your-docker-registry-service-connection'
  # Tag to give the Docker image
  tag: '$(Build.BuildId)'

pool:
  name: 'Linux_Agent'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # specify your Python version (3.7, 3.8, etc.)
    addToPath: true

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m pytest  # or your test command
  displayName: 'Run tests'

- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: 'build'
    repository: $(imageName)
    dockerfile: '**/Dockerfile'  # path to your Dockerfile if not in root
    tags: |
      $(tag)
      latest

- task: Docker@2
  displayName: 'Push Docker image'
  inputs:
    command: 'push'
    repository: $(imageName)
    tags: |
      $(tag)
      latest
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))