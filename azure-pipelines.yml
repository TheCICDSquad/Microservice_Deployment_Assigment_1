trigger:
- main

variables:
  pythonVersion: '3.10'  # Stable Python version
  appDirectory: 'Microservice_Deployment_Assigment_1/app'
  dockerImageName: 'your-python-app'

pool:
  name: 'Linux_Agent'

steps:
# Step 1: Install Python with proper dependencies
- script: |
    # Install Python locally (no sudo needed)
    wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz
    tar xzf Python-3.10.13.tgz
    cd Python-3.10.13
    ./configure --prefix=$(Agent.ToolsDirectory)/python-3.10.13
    make
    make install
    export PATH=$(Agent.ToolsDirectory)/python-3.10.13/bin:$PATH
    python -m pip install --upgrade pip
    python --version
  displayName: 'Install Python locally'

# Step 2: Install application dependencies
- script: |
    cd $(appDirectory)
    pip install -r requirements.txt
  displayName: 'Install Python dependencies'

# Step 3: Run the application (modify as needed)
- script: |
    cd $(appDirectory)
    python main.py  # or your entrypoint script
  displayName: 'Run Python application'

# Step 4: Build Docker image (if needed)
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: 'build'
    repository: $(dockerImageName)
    dockerfile: '$(appDirectory)/Dockerfile'  # assuming Dockerfile is in app dir
    tags: |
      latest
      $(Build.BuildId)

# Step 5: Push Docker image (optional)
- task: Docker@2
  displayName: 'Push Docker image'
  inputs:
    command: 'push'
    repository: $(dockerImageName)
    tags: |
      latest
      $(Build.BuildId)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))