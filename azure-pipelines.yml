trigger:
- main

pool:
  name: 'Linux_Agent'  # Your pool with Python 3.12.3

steps:
# 1. Force clean checkout of your repository
- checkout: self
  clean: true
  displayName: 'Checkout repository'

# 2. Verify the exact repository structure
- script: |
    echo "Current working directory:"
    pwd
    echo "Repository contents:"
    ls -R
    echo "Checking for application files..."
    find . -name main.py -o -name requirements.txt
  displayName: 'Verify repository structure'

# 3. Run application with verified paths
- script: |
    # Find the actual path to your application
    APP_PATH=$(find . -path "*/app/main.py" -printf '%h\n' | head -1)
    
    if [ -z "$APP_PATH" ]; then
      echo "##[error]Could not find application directory"
      exit 1
    fi
    
    echo "Found application at: $APP_PATH"
    
    # Setup virtual environment
    python3.12 -m venv .venv
    source .venv/bin/activate
    
    # Install requirements
    pip install -r "$APP_PATH/requirements.txt"
    
    # Run application
    python "$APP_PATH/main.py"
  displayName: 'Run FastAPI application'
# # 3. Setup Python environment
# - script: |
#     # Create virtual environment
#     python3.12 -m venv .venv
#     source .venv/bin/activate
    
#     # Install dependencies
#     cd Microservice_Deployment_Assigment_1/app
#     pip install -r requirements.txt
    
#     # Run application
#     python main.py
#   displayName: 'Run FastAPI application'

# 2. Docker build (only if you need it)
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: 'build'
    repository: 'your-app-name'
    dockerfile: 'Microservice_Deployment_Assigment_1/app/Dockerfile'
    tags: 'latest'